
Функция ПолучитьСооИмя(Схема) Экспорт
	
	СооИмя = Новый Соответствие;
	Для каждого НаборДанных из Схема.НаборыДанных Цикл
		Для каждого Эл из НаборДанных.Поля Цикл
			Если СокрлП(ЭЛ.Заголовок)="" Тогда
				СооИмя.Вставить(СокрЛП(Эл.Поле),СокрЛП(Эл.Поле));
			ИНАче
				СооИмя.Вставить(СокрЛП(Эл.Поле),Эл.Заголовок);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат СооИмя;
	
КонецФункции

Функция ПолучитьИмяГруппировки(Грп,сооИмя)
	
	Рез = "";
	
	Если Грп.ПоляГруппировки.Элементы.количество()=0 ТОгда
		Возврат "<Детальные записи>";
	КонецеслИ;
	
	Для каждого эл из Грп.ПоляГруппировки.элементы Цикл
		пИмя = СокрлП(Эл.Поле);
		пИмя2="";
		п = Найти(пИмя,".");
		Если п<>0 Тогда 
			пИмя2 = Сред(пИмя,п);
			пИмя  = Лев(пИмя,п-1);
		КонецеслИ;
		
		рез = рез +", "+ СооИмя.Получить(пимя)+пимя2;
	Конеццикла;
	
	рез = СокрЛП(Сред(Рез,2));
	
	Возврат Рез;
	
КонецФункции

Процедура ЗаполнитьГруппировку(ОтчОбк,Грп,сооИмя,текСпкГрупп)
	
	Пока 1=1 Цикл
		
		НовГрп = Отчет.НастройкаГруппСКД.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ОтчОбк.СкопироватьГруппировку(НовГрп,Грп);
		
		текСпкГрупп.Добавить(НовГрп,ПолучитьИмяГруппировки(Грп,сооИмя),Грп.Использование);
		
		Если Грп.Структура.Количество()=0 ТОгда
			Возврат; 
		Конецесли;
		
		Грп = Грп.Структура[Грп.Структура.Количество()-1];
	КонецЦикла;
	
конецпроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	
	отчОбк = РеквизитФормыВЗначение("Отчет");
	Схема = отчОбк.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Инициализация Групп
	Отчет.НастройкаГруппСКД = Новый НастройкиКомпоновкиДанных;
	
	//Имена полей
	СооИмя = ПолучитьСооИмя(Схема);	
	
	Грп = Схема.НастройкиПоУмолчанию;
	Пока Грп.Структура.Количество()>0 Цикл
		Грп = Грп.Структура[Грп.Структура.Количество()-1];
		Если ТипЗнч(Грп) = ТИп("ТаблицаКомпоновкиДанных") ТОгда   
			Для каждого гпрКол из Грп.Колонки Цикл
				ЗаполнитьГруппировку(ОтчОбк,гпрКол,сооИмя,Отчет.СпкКолонки);
			КонецЦикла;
			Грп = Грп.Строки[0];
		КонецЕСЛИ;
		ЗаполнитьГруппировку(ОтчОбк,Грп,сооИмя,Отчет.СпкГрупп);
		
	КонецЦикла;
	
	Элементы.СпкГрупп.Видимость     = Отчет.СпкГрупп.Количество()   <> 0;
	Элементы.СпкКолонки.Видимость   = Отчет.СпкКолонки.Количество() <> 0;
	
	ОткрытьНастройки(ОтчОбк);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки(ОбкОтчет) 
	
	Стк = Новый Структура();
	Для каждого эл из ОбкОтчет.Метаданные().Реквизиты Цикл
		Если Найти(",НастройкаГруппСКД,",","+Эл.Имя+",") <> 0 Тогда Продолжить; КонецЕсли;
		Если ТипЗнч(Отчет[Эл.Имя]) = Тип("СписокЗначений") Тогда
			пСпк = Отчет[Эл.Имя].Скопировать();
			Для каждого пЭл из пСпк Цикл
				пЭл.Значение = СокрлП(пЭл.Значение);				
			КонецЦикла;
			Стк.Вставить(Эл.Имя, пСпк);
		ИНаче
			Стк.Вставить(Эл.Имя, Отчет[Эл.Имя]);
		КонецЕСЛИ;
	КонецЦикла;
	
	//Детальные записи
	пСпк = Новый СписокЗначений;
	для каждого эл из отчет.КомпоновщикНастроек.Настройки.Выбор.Элементы Цикл
		пСпк.Добавить(эл.Поле,,эл.Использование);
	конеццикла;
	стк.вставить("ДетЗаписи",пСпк);
	
	//Отбор
	пМас = Новый Массив;
	для каждого эл из отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЗначениеЗаполнено(эл.ПравоеЗначение) и эл.Использование = истина Тогда
			пМас.Добавить(новый Структура("ЛевоеЗначение,ПравоеЗначение,ВидСравнения",эл.ЛевоеЗначение,Эл.ПравоеЗначение,эл.ВидСравнения));
		КонецесЛИ;
	конеццикла;
	Если пМас.Количество()<>0 Тогда
		стк.вставить("КомпОтбор",пМас);
	КонецесЛИ;
	
	ХранилищеОбщихНастроек.Сохранить(ЭтаФорма.ИмяФормы,,Стк,,ИмяПользователя());
	
КонецПроцедуры

&НаСервере
Процедура ОткрытьНастройки(ОбкОтчет) 
	
	Стк = ХранилищеОбщихНастроек.Загрузить(ЭтаФорма.ИмяФормы,,,ИмяПользователя());
	Если ТипЗнч(Стк) <> Тип("Структура") ТОгда Возврат; КонецЕсли;
	
	Для каждого Эл из Стк Цикл
		Если эл.ключ <> "ДетЗаписи" и эл.ключ <> "КомпОтбор" и ОбкОтчет.Метаданные().Реквизиты.найти(эл.ключ)=Неопределено Тогда Продолжить; КонецЕсли;
		
		Если эл.ключ = "ДетЗаписи" Тогда
			
			спкДетЗаписиИзНастроек = эл.значение;
			
		ИначеЕсли эл.ключ = "КомпОтбор" Тогда
			
			для каждого пЭл из Эл.Значение Цикл
				СпкКомпОтбор.Добавить(пЭл);
			Конеццикла;
			
		ИначеЕсли ТипЗнч(ОбкОтчет[Эл.Ключ])=Тип("СписокЗначений") Тогда  
			тСпк = ОбкОтчет[Эл.Ключ];	
			пСпк = эл.Значение;
			Для а=-пСпк.Количество() по -1 Цикл 
				пЭл = пСпк.Получить(-а-1);
				
				Для каждого тЭл из тСпк Цикл
					если тЭл.представление = пЭл.Представление Тогда
						тЭл.Пометка = пЭл.Пометка;
						тСпк.сдвинуть(тЭл,-тСпк.индекс(тЭл));	
					КонецеСЛИ;
				Конеццикла;
				
			КонецЦикла;
			
		Иначе
			Отчет[Эл.Ключ] = Эл.Значение;
		КонецеСЛИ;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Отчет.Дт < Дата(2000,1,1) Тогда
	Отчет.Дт  = НачалоМЕсяца(ТекущаяДата()-30 * 24*3600);
	Отчет.Дт1 = КонецМесяца(Отчет.дт);
	КонецеслИ;
	
	кнНастройка(1); 
	
	//ПриСозданииНаСервере компановщик не сохраняется
	Если спкДетЗаписиИзНастроек.Количество()>0 Тогда
		тСпк = отчет.КомпоновщикНастроек.Настройки.Выбор.Элементы;	
		пСпк = спкДетЗаписиИзНастроек;
		
		Для а=-пСпк.Количество() по -1 Цикл 
			пЭл = пСпк.Получить(-а-1);
			
			Для каждого тЭл из тСпк Цикл
				если тЭл.поле = пЭл.значение Тогда
					тЭл.Использование = пЭл.Пометка;
					тСпк.сдвинуть(тЭл,-тСпк.индекс(тЭл));	
				КонецеСЛИ;
			Конеццикла;
			
		КонецЦикла;
	КонецесЛИ;
	
	Если СпкКомпОтбор.Количество()>0 Тогда
		
		есть = ложь;
		для каждого пЭлСпк из СпкКомпОтбор Цикл
			пЭл = пЭлСпк.Значение;
			Для каждого эл из отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
				Если эл.ЛевоеЗначение = пЭл.ЛевоеЗначение Тогда
					ЗаполнитьЗначенияСвойств(Эл,пЭл);
					эл.Использование = истина;
					есть=Истина;
					прервать;
				Конецесли;
			Конеццикла;
		Конеццикла;
		
		Если Есть = Ложь ТОгда
			НовЭл = отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(НовЭл,пЭл);
		КонецЕслИ;
		
	КонецЕслИ;
	
	  
	
КонецПроцедуры


&НаКлиенте
Процедура кнНастройка(Команда)
	Элементы.грпНастройка.Видимость = 1 - Элементы.грпНастройка.Видимость;
КонецПроцедуры   

&НаКлиенте
Функция ПолучитьЗаголовокОтчетаНаКлиенте()
	
	Если Элементы.грДтПериод.Видимость=Истина ТОгда
		Возврат ""+ЭтаФорма.Заголовок+" с "+Формат(Отчет.Дт,"ДФ=dd.MM.yyyy")+" по "+Формат(Отчет.Дт1,"ДФ=dd.MM.yyyy");
	ИНАче
		Возврат ""+ЭтаФорма.Заголовок+" на "+Формат(Отчет.Дт,"ДФ=dd.MM.yyyy");
	КонецеслИ;
	
КонецФункции

Функция ПолучитьЗаголовокОтчета()
	
	Если Элементы.грДтПериод.Видимость=Истина ТОгда
		Возврат ""+ЭтаФорма.Заголовок+" с "+Формат(Отчет.Дт,"ДФ=dd.MM.yyyy")+" по "+Формат(Отчет.Дт1,"ДФ=dd.MM.yyyy");
	ИНАче
		Возврат ""+ЭтаФорма.Заголовок+" на "+Формат(Отчет.Дт,"ДФ=dd.MM.yyyy");
	КонецеслИ;
	
КонецФункции

&НаСервере
Функция СформироватьНаСервере()
	Элементы.грпНастройка.Видимость = ложь;
	
	ОбкОтчет = РеквизитФормыВЗначение("Отчет");
	СохранитьНастройки(ОбкОтчет);
	
	ТабСкд = ОбкОтчет.Данные(АдресРасшифровкиДанных,АдресСКД,ЭтаФорма.УникальныйИдентификатор);
	Если Элементы.грДтПериод.Видимость=Истина ТОгда
		ТабСкд.Область(2,1,2,1).Текст  = ""+ЭтаФорма.Заголовок+" с "+Формат(Отчет.Дт,"ДФ=dd.MM.yyyy")+" по "+Формат(Отчет.Дт1,"ДФ=dd.MM.yyyy");
	ИНАче
		ТабСкд.Область(2,1,2,1).Текст  = ""+ЭтаФорма.Заголовок+" на "+Формат(Отчет.Дт,"ДФ=dd.MM.yyyy");
	КонецеслИ;
	ТабСкд.Область(2,1,2,1).Шрифт = Новый Шрифт(ТабСкд.Область(2,1,2,1).Шрифт,,10,Истина);
	
	ТекЦвет = ТабСКД.Область(1,1,1,1).ЦветФона;
	начСтр=Неопределено;
	ДЛя а=3 по 10 Цикл
		Если ТабСКД.Область(а,1,а,1).ЦветФона <> ТекЦвет Тогда
			текЦвет = ТабСКД.Область(а,1,а,1).ЦветФона;
			начСтр= а;
			прервать;
		КонецеСЛИ;
	КонецЦикла; 
	
	Таб =  Результат;
	Таб.Очистить();
	
	Если начСтр <> Неопределено Тогда
		ДЛя а=начСтр по 10 Цикл
			Если ТабСКД.Область(а,1,а,1).ЦветФона <> ТекЦвет Тогда
				ТабСКД.Область(начСтр,1,а-1,ТабСкд.ШиринаТаблицы).Шрифт = Новый Шрифт(ТабСкд.Область(2,1,2,1).Шрифт,,8,Истина);
				Таб.ФиксацияСверху = а-1;
				прервать;
			КонецеСЛИ;
		КонецЦикла;
	КонецЕсли;
	
	ТабСкд.ВерхнийКолонтитул.ТекстСправа = ""+ИмяПользователя()+" - "+ТекущаяДата()+" страница [&НомерСтраницы] из [&СтраницВсего]";
	ТабСкд.ВерхнийКолонтитул.выводить = Истина;
	
	Таб.Вывести(ТабСкд);
	//Таб.ФиксацияСлева = 2;
	Таб.ОтображатьЗаголовки = Истина;
	
КонецФункции



&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
	Элементы.Результат.ОтображениеСостояния.Видимость = ложь; 
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
КонецПроцедуры


&НаКлиенте
Процедура кнПериод(Команда)
	
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода,ВыборКварталов", ДобавитьМесяц(ТекущаяДата(),-1), ДобавитьМесяц(ТекущаяДата(),-1), ложь);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, , , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОТчет.дт = РезультатВыбора.НачалоПериода;
	Отчет.Дт1= РезультатВыбора.КонецПериода;
	
	//Таб = Печать(РезультатВыбора.НачалоПериода);
	//Таб.Показать();


КонецПроцедуры

&НаСервере
Процедура РаскрутитьРасшифровку(Рсш,Стк)
	
	Если ТипЗнч(Рсш) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Для каждого Зн из Рсш.ПолучитьПоля() Цикл
			Стк.вставить(Зн.Поле,зн.Значение);
		КонецЦикла;
	КонецЕсли;
	
	//Для каждого Род из рсш.ПолучитьРОдителей() Цикл
	//	РаскрутитьРасшифровку(Род,Стк);
	//КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьРсш(Расшифровка)
	
	Стк = Новый Структура();
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресРасшифровкиДанных);
	РаскрутитьРасшифровку(ДанныеРасшифровки.Элементы[Расшифровка],Стк);
	
	Если Стк.Свойство("Номенклатура") = Ложь Тогда
		Возврат Неопределено; 
	Иначе
		Возврат Стк;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	// Вставить содержимое обработчика.
    СтандартнаяОбработка = Ложь;
	
    ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСКД);
 
    ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(АдресРасшифровкиДанных, ИсточникДоступныхНастроек);
 
    ДоступныеДействия = Новый Массив();
    ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
    
    Оповещение = Новый ОписаниеОповещения("РезультатОбработкаРасшифровки_Продолжение", ЭтаФорма, Расшифровка);
    ОбработкаРасшифровки.ПоказатьВыборДействия(Оповещение, Расшифровка, ДоступныеДействия, , Истина);
	
КонецПроцедуры



&НаКлиенте
Процедура  РезультатОбработкаРасшифровки_Продолжение(ВыполненноеДействие, ПараметрВыполненногоДействия, ДополнительныеПараметры) Экспорт
    Если ПараметрВыполненногоДействия <> Неопределено Тогда
        
        Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
            ПоказатьЗначение(,ПараметрВыполненногоДействия);
        КонецЕсли;
        
    КонецЕсли;        
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриАктивизации(Элемент)
	СткСумма = ВычислитьСуммуВыделенныхЯчеекТабличногоДокумента(Результат);
	
	ПолеСуммы = СткСумма.Сумма;	
	Если СткСумма.Сумма=0 Тогда
		Элементы.ПолеСуммы.Видимость  = Ложь;
	ИНаче
		Элементы.ПолеСуммы.Видимость  = Истина;
	КонецеСЛИ;
	
	полеСтрок = "строк: "+СткСумма.строк;
	Если СткСумма.строк<2 Тогда
		Элементы.полеСтрок.Видимость  = Ложь;
	ИНаче
		Элементы.полеСтрок.Видимость  = Истина;
	КонецеСЛИ;
	
КонецПроцедуры

&НаКлиенте
Функция ВычислитьСуммуВыделенныхЯчеекТабличногоДокумента(ПолеТабличногоДокумента) Экспорт
	
	Сумма = 0;
	Строк=0;
	Соо = Новый Соответствие;
	Для Каждого Область Из ПолеТабличногоДокумента.ВыделенныеОбласти Цикл
		Если ТипЗнч(Область) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда
			Строк =  Область.Низ-Область.Верх +1;
			Для ИндексСтрока = Область.Верх По Область.Низ Цикл
				Для ИндексКолонка = Область.Лево По Область.Право Цикл
					обНОмСтр = Формат(ИндексСтрока, "ЧГ=0");
					обНОмКол = Формат(ИндексКолонка, "ЧГ=0");
					
										
					Попытка
						Сумма = Сумма+Число(СтрЗаменить(ПолеТабличногоДокумента.Область("R" + обНомСтр + "C" + обНОмКол) .Текст, " ", ""));
					Исключение
					КонецПопытки;
					
					
					
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый Структура("Сумма,Строк",Сумма,Строк);
	
КонецФункции

&НаКлиенте
Процедура ПоискСтрокаПриИзменении(Элемент,Вперед=0)
	
	текПоиск = нрег(СокрлП(ПоискСтрока));
	Если текПоиск = "" Тогда Возврат; КонецЕсли;
	Таб = Результат;
	
	НачСтрока=1;
	конСтрока=Таб.ВысотаТаблицы;
	
	Если Вперед = 1 Тогда
		начСтрока = Результат.ТекущаяОбласть.Верх+1;	
	ИНачеЕсли Вперед=-1 ТОгда
		конСтрока = -1;
		НачСтрока = -Результат.ТекущаяОбласть.Верх+1;
	КонецеСЛИ;
	
	
	Для а=НачСтрока по конСтрока Цикл
		
		Если а<0 Тогда
			нс=-а;
		ИНАче
			нс=а;
		КонецЕсли;
		
		ДЛя б=1 по 3 Цикл
			п =нрег(Таб.Область(нс,б,нс,б).Текст);
			Если Найти(п,текПоиск)<>0 Тогда
				этаФорма.ТекущийЭлемент = Элементы.Результат;
				Элементы.Результат.ТекущаяОбласть= Таб.Область(нс,б,нс,б);
				Возврат;
			КонецЕсли;
			
		КонецЦикла;
		
	Конеццикла;
	
	
	
	этаФорма.ТекущийЭлемент = Элементы.Результат;
	Элементы.Результат.ТекущаяОбласть= Результат.ТекущаяОбласть;
	
	ПоказатьПредупреждение(,"Строка не найдена");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискДалее(Команда)
	 ПоискСтрокаПриИзменении(Неопределено,1);
КонецПроцедуры

&НаКлиенте
Процедура ПоискНазад(Команда)
	 ПоискСтрокаПриИзменении(Неопределено,-1);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	этаФорма.Модифицированность=ложь;
КонецПроцедуры

&НаКлиенте
Асинх Процедура кнСохранитьXLS(Команда)
	
	Диалог = новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = "Сохранение отчета в файл";
	имяФайла = ""+СтрЗаменить(ПолучитьЗаголовокОтчетаНаКлиенте(),"/","-");
	имяФайла = ""+СтрЗаменить(имяФайла,"\","-");
	Диалог.ПолноеИмяФайла = имяФайла;
	
	Если Найти(команда.имя,"XLS")<>0 Тогда
		Диалог.Фильтр = "Лист Excel (*.xlsx)|*.xlsx|";
		Диалог.ПолноеИмяФайла = Диалог.ПолноеИмяФайла+".xlsx";
		типФайла = ТипФайлаТабличногоДокумента.XLSX;
	иначе
		Диалог.Фильтр = "Лист Excel (*.pdf)|*.pdf|";
		Диалог.ПолноеИмяФайла = Диалог.ПолноеИмяФайла+".pdf";
		типФайла = ТипФайлаТабличногоДокумента.pdf;
	КонецесЛИ;
	
	Если Ждать Диалог.ВыбратьАсинх() <> Неопределено Тогда
		Если Ждать Результат.ЗаписатьАсинх(Диалог.ПолноеИмяФайла,типФайла) <> Неопределено Тогда
			оо = Новый ОписаниеОповещения("ОткрытьКаталогПослеСохранения",ЭтотОбъект,Диалог.Каталог);
			ПоказатьОповещениеПользователя("Файл записан",оо,Диалог.ПолноеИмяФайла);
		КонецесЛИ;
	КонецеСЛИ;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКаталогПослеСохранения(Пар) Экспорт
	
	ЗапуститьПриложениеАсинх(пар);
	
КонецПроцедуры



